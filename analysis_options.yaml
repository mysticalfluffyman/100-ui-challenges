include: all_lint_rules.yaml
analyzer:
  language:
    strict-casts: true
    strict-inference: true
    strict-raw-types: true
  plugins:
    - dart_code_metrics
  

  strong-mode:
    implicit-casts: false
    implicit-dynamic: false
  errors:
    todo: ignore
    # Otherwise cause the import of all_lint_rules to warn because of some rules conflicts.
    # We explicitly enabled even conflicting rules and are fixing the conflict
    # in this file
    included_file_warning: ignore
    invalid_annotation_target: ignore

linter:
  rules:
    # Too verbose with little value, and this is taken care of by the Flutter devtool anyway.
    diagnostic_describe_all_properties: false

    # Conflicts with `prefer_single_quotes`
    # Single quotes are easier to type and don't compromise on readability.
    prefer_double_quotes: false

    # Conflicts with `omit_local_variable_types` and other rules.
    # As per Dart guidelines, we want to avoid unnecessary types to make the code
    # more readable.
    # See https://dart.dev/guides/language/effective-dart/design#avoid-type-annotating-initialized-local-variables
    always_specify_types: false

    # Incompatible with `prefer_final_locals`
    # Having immutable local variables makes larger functions more predictible
    # so we will use `prefer_final_locals` instead.
    unnecessary_final: false

    # This project doesn't use Flutter-style todos
    flutter_style_todos: false

    # Conflicts with disabling `implicit-dynamic`
    avoid_annotating_with_dynamic: false

    # Conflicts with `prefer_relative_imports`
    always_use_package_imports: false

    # Key can be defined when needed
    use_key_in_widget_constructors: false

    # Conflicts with 'prefer_final_parameters'
    avoid_final_parameters: false

    # Conflicts with localizations for flutter_gen package
    depend_on_referenced_packages: false

    # Conflicts with Clean Architecture
    one_member_abstracts: false

    # This project uses environment variables
    do_not_use_environment: false

dart_code_metrics:
  anti-patterns:
    - long-method
  metrics:
    source-lines-of-code: 100
    maintainability-index: 0
    maximum-nesting-level: 9
    number-of-methods: 40
    number-of-parameters: 19
    weight-of-class: 0
    technical-debt:
      threshold: 0
      todo-cost: 0
      deprecated-annotations-cost: 0
      ignore-cost: 1
      ignore-for-file-cost: 1
      as-dynamic-cost: 1
      file-nullsafety-migration-cost: 1
  metrics-exclude:
    - "test/**"
    - "integration_test/**"
  rules:
    - avoid-ignoring-return-values: false
    - avoid-nested-conditional-expressions:
        acceptable-level: 3
    - ban-name:
        entries:
          - ident: int.parse
            description: Use int.tryParse
          - ident: double.parse
            description: Use double.tryParse
          - ident: DateTime.parse
            description: Use DateTime.tryParse
          - ident: Uri.parse
            description: Use Uri.tryParse
          - ident: first
            description: Use firstOrNull
          - ident: firstWhere
            description: Use firstWhereOrNull
          - ident: last
            description: Use lastOrNull
          - ident: lastWhere
            description: Use lastWhereOrNull
        exclude:
          - test/**
    - member-ordering-extended:
        alphabetize: true
        order:
          - constructors
    - prefer-match-file-name:
        exclude:
          - test/**
    - tag-name:
        var-names: [_className]
        strip-prefix: _
        strip-postfix: State
    
    # TODO enable below
    - avoid-dynamic: false
    - avoid-non-ascii-symbols: false
    - avoid-passing-async-when-sync-expected: false
    - no-equal-arguments: false
    - prefer-correct-identifier-length: false
    - prefer-moving-to-variable: false
    - avoid-redundant-async: false
    - avoid-top-level-members-in-tests: false # TODO enable
    - missing-test-assertion: false # TODO enable
    - prefer-correct-test-file-name: false # TODO enable
